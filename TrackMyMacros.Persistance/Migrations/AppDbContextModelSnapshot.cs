// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrackMyMacros.Persistance;

#nullable disable

namespace TrackMyMacros.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrackMyMacros.Application.Features.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<Guid>("Id"), 50L, null, null, null, null, null);

                    b.Property<Guid>("BodyPartId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BodyPartId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0d4c8cd-e49a-49ca-88a5-2348fdc79f6d"),
                            BodyPartId = new Guid("8d68c9e3-f8b3-4d17-9446-1e188a1a4744"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3584),
                            Description = "Push-ups are a great bodyweight exercise for the upper body.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3601),
                            Name = "Incline Dumbell Press",
                            VideoUrl = "https://www.youtube.com/watch?v=Eh00_rniF8E"
                        },
                        new
                        {
                            Id = new Guid("11a34cfb-cabc-4dea-a0ef-f6e7803b2246"),
                            BodyPartId = new Guid("8d68c9e3-f8b3-4d17-9446-1e188a1a4744"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3616),
                            Description = "Push-ups are a great bodyweight exercise for the upper body.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3617),
                            Name = "Bench Press",
                            VideoUrl = "https://www.youtube.com/watch?v=Eh00_rniF8E"
                        },
                        new
                        {
                            Id = new Guid("54d2fd4e-4771-421d-ad4c-b9376b3aeed7"),
                            BodyPartId = new Guid("8d68c9e3-f8b3-4d17-9446-1e188a1a4744"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3620),
                            Description = "Push-ups are a great bodyweight exercise for the upper body.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3622),
                            Name = "Flyes",
                            VideoUrl = "https://www.youtube.com/watch?v=Eh00_rniF8E"
                        },
                        new
                        {
                            Id = new Guid("c6d5a37c-6f19-40d5-93ae-0be9a6a9b8d3"),
                            BodyPartId = new Guid("6a10d667-3bae-4473-905f-8edf3d235522"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3625),
                            Description = "A machine exercise that targets the latissimus dorsi muscles.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3626),
                            Name = "Lat Pulldown",
                            VideoUrl = "https://www.youtube.com/watch?v=CAwf7n6Luuc"
                        },
                        new
                        {
                            Id = new Guid("2a7b2787-5e1f-4a5d-8d84-0aca46d6052c"),
                            BodyPartId = new Guid("4045f98f-21b0-4c61-8fd0-dd02a21547c4"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3630),
                            Description = "An essential exercise for building leg strength.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3631),
                            Name = "Squats",
                            VideoUrl = "https://www.youtube.com/watch?v=Dy28eq2PjcM"
                        },
                        new
                        {
                            Id = new Guid("c7d8a457-41c5-4aa9-b47d-f33aa74d2772"),
                            BodyPartId = new Guid("6a10d667-3bae-4473-905f-8edf3d235522"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3635),
                            Description = "A great exercise to build a strong back.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3636),
                            Name = "Rows",
                            VideoUrl = "https://www.youtube.com/watch?v=GZbfZ033f74"
                        },
                        new
                        {
                            Id = new Guid("3c9d6d81-631f-4787-9135-3668f22cad6d"),
                            BodyPartId = new Guid("4045f98f-21b0-4c61-8fd0-dd02a21547c4"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3640),
                            Description = "An advanced exercise for building quad strength and mobility.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3641),
                            Name = "Reverse Nordics",
                            VideoUrl = "https://www.youtube.com/watch?v=hEZYIrEXA2M"
                        },
                        new
                        {
                            Id = new Guid("4f517cbd-a107-4c9a-8b9e-647f5310c0bb"),
                            BodyPartId = new Guid("4045f98f-21b0-4c61-8fd0-dd02a21547c4"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3644),
                            Description = "Targets and isolates the quadriceps.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3645),
                            Name = "Sissy Squat",
                            VideoUrl = "https://www.youtube.com/watch?v=3B-3Khbht5E"
                        },
                        new
                        {
                            Id = new Guid("5aad75e5-feaa-45d0-a34b-c7f413c621fc"),
                            BodyPartId = new Guid("d1fce414-03cb-4a93-a203-7a55a0a20d88"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3650),
                            Description = "An essential exercise for the hamstrings and glutes.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3651),
                            Name = "Romanian Deadlift (RDL)",
                            VideoUrl = "https://www.youtube.com/watch?v=2SHsk9Azd4M"
                        },
                        new
                        {
                            Id = new Guid("6bbe5654-2a23-4d19-b55a-d04024b18be3"),
                            BodyPartId = new Guid("b96f38fd-1105-474d-a578-6cb661d9b882"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3655),
                            Description = "A great exercise to target the calves.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3656),
                            Name = "Calf Raises",
                            VideoUrl = "https://www.youtube.com/watch?v=-M4-G8p8fmc"
                        },
                        new
                        {
                            Id = new Guid("7c00631d-77e2-4108-9f39-a6d48735bb90"),
                            BodyPartId = new Guid("9b32d4d5-b7a2-4aa3-8862-eef026938e49"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3659),
                            Description = "A simple but effective core exercise.",
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 129, DateTimeKind.Utc).AddTicks(3661),
                            Name = "Crunches",
                            VideoUrl = "https://www.youtube.com/watch?v=Xyd_fa5zoEU"
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.DailyLimit.DailyLimits", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Calories")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WeekdaysMealsPerDay")
                        .HasColumnType("integer");

                    b.Property<int>("WeekendMealsPerDay")
                        .HasColumnType("integer");

                    b.Property<double>("WeightInKg")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("DailyLimits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Calories = 2400,
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(4052),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(4067),
                            WeekdaysMealsPerDay = 5,
                            WeekendMealsPerDay = 5,
                            WeightInKg = 75.900000000000006
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Day.Day", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AllowedCarbohydrate")
                        .HasColumnType("integer");

                    b.Property<int>("AllowedFat")
                        .HasColumnType("integer");

                    b.Property<int>("AllowedProtein")
                        .HasColumnType("integer");

                    b.Property<double>("Carbohydrate")
                        .HasColumnType("double precision");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Fat")
                        .HasColumnType("double precision");

                    b.Property<int>("MealCount")
                        .HasColumnType("integer");

                    b.Property<double>("Protein")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b89c3992-3325-4467-b084-6daf5677d127"),
                            AllowedCarbohydrate = 100,
                            AllowedFat = 100,
                            AllowedProtein = 100,
                            Carbohydrate = 10.0,
                            Date = new DateOnly(2024, 12, 8),
                            Fat = 10.0,
                            MealCount = 1,
                            Protein = 10.0
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Exercise.BodyPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<Guid>("Id"), 50L, null, null, null, null, null);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("BodyParts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b96f38fd-1105-474d-a578-6cb661d9b882"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2930),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2960),
                            Name = "Calves"
                        },
                        new
                        {
                            Id = new Guid("a44e98fc-a6a1-4955-9a4f-0d68ef89c4ba"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2978),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2979),
                            Name = "Triceps"
                        },
                        new
                        {
                            Id = new Guid("6a10d667-3bae-4473-905f-8edf3d235522"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2982),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2983),
                            Name = "Back"
                        },
                        new
                        {
                            Id = new Guid("8d68c9e3-f8b3-4d17-9446-1e188a1a4744"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2985),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2986),
                            Name = "Chest"
                        },
                        new
                        {
                            Id = new Guid("ff4fdfe9-9345-4152-85cf-58327a32af22"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2989),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2990),
                            Name = "Shoulders"
                        },
                        new
                        {
                            Id = new Guid("d1fce414-03cb-4a93-a203-7a55a0a20d88"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2993),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2994),
                            Name = "Hamstrings"
                        },
                        new
                        {
                            Id = new Guid("4045f98f-21b0-4c61-8fd0-dd02a21547c4"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2997),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(2998),
                            Name = "Quads"
                        },
                        new
                        {
                            Id = new Guid("5b73818b-2c0f-43a5-aa15-02df756ab481"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3000),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3001),
                            Name = "Glutes"
                        },
                        new
                        {
                            Id = new Guid("81d308c8-5ce7-44a5-b9c1-00c610e79b5c"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3005),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3007),
                            Name = "Neck"
                        },
                        new
                        {
                            Id = new Guid("9b32d4d5-b7a2-4aa3-8862-eef026938e49"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3010),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 127, DateTimeKind.Utc).AddTicks(3012),
                            Name = "Abdominals"
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("Id"), 100L, null, null, null, null, null);

                    b.Property<double>("CarbohydrateAmount")
                        .HasColumnType("double precision");

                    b.Property<double?>("DefaultQuantity")
                        .HasColumnType("double precision");

                    b.Property<double>("FatAmount")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uuid");

                    b.Property<double?>("Max")
                        .HasColumnType("double precision");

                    b.Property<double?>("Min")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("ProteinAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int>("QuantityInGrams")
                        .HasColumnType("integer");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<int>("UomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarbohydrateAmount = 11.0,
                            FatAmount = 5.0,
                            Name = "Peanut Butter",
                            ProteinAmount = 20.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarbohydrateAmount = 40.0,
                            FatAmount = 8.0,
                            Name = "Hovis",
                            ProteinAmount = 10.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 3,
                            CarbohydrateAmount = 14.0,
                            FatAmount = 0.29999999999999999,
                            Name = "Apple",
                            ProteinAmount = 0.29999999999999999,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 4,
                            CarbohydrateAmount = 5.5,
                            FatAmount = 3.1000000000000001,
                            Name = "Arrabiata Sauce Barilla",
                            ProteinAmount = 1.3999999999999999,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 5,
                            CarbohydrateAmount = 4.0,
                            DefaultQuantity = 40.0,
                            FatAmount = 0.20000000000000001,
                            Name = "Arla Kvarg Vanilj",
                            ProteinAmount = 9.6999999999999993,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 6,
                            CarbohydrateAmount = 23.0,
                            FatAmount = 0.10000000000000001,
                            Name = "Banana",
                            ProteinAmount = 1.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 7,
                            CarbohydrateAmount = 52.0,
                            FatAmount = 0.10000000000000001,
                            Name = "Basmati Rice",
                            ProteinAmount = 5.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 8,
                            CarbohydrateAmount = 7.5999999999999996,
                            FatAmount = 0.5,
                            Name = "Blueberries",
                            ProteinAmount = 0.5,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 9,
                            CarbohydrateAmount = 65.0,
                            FatAmount = 2.2000000000000002,
                            Name = "Bran Flakes",
                            ProteinAmount = 11.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 10,
                            CarbohydrateAmount = 44.0,
                            DefaultQuantity = 80.0,
                            FatAmount = 4.0,
                            Name = "Bread",
                            ProteinAmount = 10.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 11,
                            CarbohydrateAmount = 0.40000000000000002,
                            FatAmount = 75.0,
                            Name = "Breggott",
                            ProteinAmount = 0.40000000000000002,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 12,
                            CarbohydrateAmount = 76.0,
                            FatAmount = 1.3,
                            Name = "Bulgur",
                            ProteinAmount = 12.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 13,
                            CarbohydrateAmount = 0.10000000000000001,
                            FatAmount = 0.10000000000000001,
                            Name = "Chicken Breast",
                            ProteinAmount = 23.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 14,
                            CarbohydrateAmount = 6.5,
                            DefaultQuantity = 255.0,
                            FatAmount = 1.5,
                            Name = "Chilli",
                            ProteinAmount = 7.7999999999999998,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 15,
                            CarbohydrateAmount = 26.0,
                            DefaultQuantity = 40.0,
                            FatAmount = 0.80000000000000004,
                            Name = "Weetabix",
                            ProteinAmount = 4.5,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 16,
                            CarbohydrateAmount = 3.1000000000000001,
                            DefaultQuantity = 170.0,
                            FatAmount = 1.5,
                            Name = "Milk",
                            ProteinAmount = 3.2999999999999998,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 17,
                            CarbohydrateAmount = 77.0,
                            FatAmount = 0.10000000000000001,
                            Name = "Raisins",
                            ProteinAmount = 2.5,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 18,
                            CarbohydrateAmount = 4.2999999999999998,
                            DefaultQuantity = 40.0,
                            FatAmount = 21.0,
                            Name = "Philadelphia",
                            ProteinAmount = 5.4000000000000004,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 19,
                            CarbohydrateAmount = 38.0,
                            FatAmount = 113.0,
                            Name = "Huel",
                            ProteinAmount = 29.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 20,
                            CarbohydrateAmount = 0.10000000000000001,
                            FatAmount = 0.10000000000000001,
                            Name = "Chicken Breast",
                            ProteinAmount = 23.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 21,
                            CarbohydrateAmount = 28.84,
                            FatAmount = 0.40000000000000002,
                            Name = "Bulgur Cooked",
                            ProteinAmount = 4.7999999999999998,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 22,
                            CarbohydrateAmount = 55.0,
                            FatAmount = 4.9000000000000004,
                            Name = "Tortilla",
                            ProteinAmount = 8.3000000000000007,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 23,
                            CarbohydrateAmount = 0.0,
                            FatAmount = 100.0,
                            Name = "Oil",
                            ProteinAmount = 0.0,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 24,
                            CarbohydrateAmount = 6.4000000000000004,
                            FatAmount = 0.5,
                            Name = "Frozen Strawberries",
                            ProteinAmount = 0.5,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 25,
                            CarbohydrateAmount = 50.0,
                            FatAmount = 15.0,
                            Name = "Granola",
                            ProteinAmount = 0.69999999999999996,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        },
                        new
                        {
                            Id = 26,
                            CarbohydrateAmount = 0.10000000000000001,
                            FatAmount = 32.0,
                            Name = "Kilmeaden",
                            ProteinAmount = 25.5,
                            Quantity = 100.0,
                            QuantityInGrams = 100,
                            RecipeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UomId = 1
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.FoodCombo.FoodCombo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FoodCombos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("043cac74-577c-4fa5-8e09-00c05b31b463"),
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 132, DateTimeKind.Utc).AddTicks(8907),
                            Name = "Test Food Combo"
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Recipe.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FoodId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.WeightReading.WeightReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("WeightReadings");
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Uom", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Uoms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 12, 8, 7, 28, 29, 135, DateTimeKind.Utc).AddTicks(9485),
                            LastModifiedDate = new DateTime(2024, 12, 8, 7, 28, 29, 135, DateTimeKind.Utc).AddTicks(9503),
                            Name = "Grams"
                        });
                });

            modelBuilder.Entity("TrackMyMacros.Application.Features.Exercise", b =>
                {
                    b.HasOne("TrackMyMacros.Domain.Aggregates.Exercise.BodyPart", "BodyPart")
                        .WithMany()
                        .HasForeignKey("BodyPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Day.Day", b =>
                {
                    b.OwnsMany("TrackMyMacros.Domain.ValueObjects.Meal", "Meals", b1 =>
                        {
                            b1.Property<Guid>("DayId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("AllowedCarbohydrate")
                                .HasColumnType("integer");

                            b1.Property<int>("AllowedFat")
                                .HasColumnType("integer");

                            b1.Property<int>("AllowedProtein")
                                .HasColumnType("integer");

                            b1.Property<double>("Carbohydrate")
                                .HasColumnType("double precision");

                            b1.Property<double>("Fat")
                                .HasColumnType("double precision");

                            b1.Property<double>("Protein")
                                .HasColumnType("double precision");

                            b1.HasKey("DayId", "Id");

                            b1.ToTable("Meal");

                            b1.WithOwner()
                                .HasForeignKey("DayId");

                            b1.OwnsMany("TrackMyMacros.Domain.ValueObjects.FoodAmount", "FoodAmounts", b2 =>
                                {
                                    b2.Property<Guid>("MealDayId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("MealId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<double>("Carbohydrate")
                                        .HasColumnType("double precision");

                                    b2.Property<double>("Fat")
                                        .HasColumnType("double precision");

                                    b2.Property<int>("FoodId")
                                        .HasColumnType("integer");

                                    b2.Property<double>("Protein")
                                        .HasColumnType("double precision");

                                    b2.Property<double>("Quantity")
                                        .HasColumnType("double precision");

                                    b2.HasKey("MealDayId", "MealId", "Id");

                                    b2.ToTable("FoodAmount");

                                    b2.WithOwner()
                                        .HasForeignKey("MealDayId", "MealId");

                                    b2.HasData(
                                        new
                                        {
                                            MealDayId = new Guid("b89c3992-3325-4467-b084-6daf5677d127"),
                                            MealId = 1,
                                            Id = 1,
                                            Carbohydrate = 10.0,
                                            Fat = 10.0,
                                            FoodId = 3,
                                            Protein = 10.0,
                                            Quantity = 100.0
                                        });
                                });

                            b1.Navigation("FoodAmounts");

                            b1.HasData(
                                new
                                {
                                    DayId = new Guid("b89c3992-3325-4467-b084-6daf5677d127"),
                                    Id = 1,
                                    AllowedCarbohydrate = 10,
                                    AllowedFat = 10,
                                    AllowedProtein = 10,
                                    Carbohydrate = 10.0,
                                    Fat = 10.0,
                                    Protein = 10.0
                                });
                        });

                    b.Navigation("Meals");
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.FoodCombo.FoodCombo", b =>
                {
                    b.OwnsMany("TrackMyMacros.Domain.ValueObjects.FoodComboAmount", "FoodComboAmounts", b1 =>
                        {
                            b1.Property<Guid>("FoodComboId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Carbohydrate")
                                .HasColumnType("double precision");

                            b1.Property<double>("Fat")
                                .HasColumnType("double precision");

                            b1.Property<int>("FoodId")
                                .HasColumnType("integer");

                            b1.Property<double>("Protein")
                                .HasColumnType("double precision");

                            b1.Property<double>("Quantity")
                                .HasColumnType("double precision");

                            b1.HasKey("FoodComboId", "Id");

                            b1.ToTable("FoodComboAmount");

                            b1.WithOwner()
                                .HasForeignKey("FoodComboId");

                            b1.HasData(
                                new
                                {
                                    FoodComboId = new Guid("043cac74-577c-4fa5-8e09-00c05b31b463"),
                                    Id = 1,
                                    Carbohydrate = 10.0,
                                    Fat = 10.0,
                                    FoodId = 1,
                                    Protein = 10.0,
                                    Quantity = 40.0
                                },
                                new
                                {
                                    FoodComboId = new Guid("043cac74-577c-4fa5-8e09-00c05b31b463"),
                                    Id = 2,
                                    Carbohydrate = 10.0,
                                    Fat = 10.0,
                                    FoodId = 2,
                                    Protein = 10.0,
                                    Quantity = 200.0
                                });
                        });

                    b.Navigation("FoodComboAmounts");
                });

            modelBuilder.Entity("TrackMyMacros.Domain.Aggregates.Recipe.Recipe", b =>
                {
                    b.OwnsMany("TrackMyMacros.Domain.ValueObjects.RecipeFoodAmount", "RecipeFoodAmounts", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Carbohydrate")
                                .HasColumnType("double precision");

                            b1.Property<double>("Fat")
                                .HasColumnType("double precision");

                            b1.Property<int>("FoodId")
                                .HasColumnType("integer");

                            b1.Property<double>("Protein")
                                .HasColumnType("double precision");

                            b1.Property<double>("Quantity")
                                .HasColumnType("double precision");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("RecipeFoodAmount");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("RecipeFoodAmounts");
                });
#pragma warning restore 612, 618
        }
    }
}
